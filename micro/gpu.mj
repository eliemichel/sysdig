
(* #require(param utils) *)

(* 00/00/0000 00:00:00 *)

(* On prend i de taille 8 pour éviter d'ajouter des lignes inutiles à la netlist
 * de découpage de i.
 * Il y a plein de variables intermédiaires afin d'éviter que les mêmes
 * variables ne soient recompilées.
 *)
seg (i:[8]) = (o:[7]) where
	i0 = i[0];
	i1 = i[1];
	i2 = i[2];
	i3 = i[3];
	ni0 = not i0;
	ni1 = not i1;
	ni2 = not i2;
	ni3 = not i3;
	is0 = ni0 and ni1 and ni2 and ni3;
	is1 =  i0 and ni1 and ni2 and ni3;
	is2 = ni0 and  i1 and ni2 and ni3;
	is3 =  i0 and  i1 and ni2 and ni3;
	is4 = ni0 and ni1 and  i2 and ni3;
	is5 =  i0 and ni1 and  i2 and ni3;
	is6 = ni0 and  i1 and  i2 and ni3;
	is7 =  i0 and  i1 and  i2 and ni3;
	is8 = ni0 and ni1 and ni2 and  i3;
	is9 =  i0 and ni1 and ni2 and  i3;
	o0 = is0 or is2 or is3 or is5 or is6 or is7 or is8 or is9;
	o1 = is0 or is1 or is2 or is3 or is4 or is7 or is8 or is9;
	o2 = is0 or is1 or is3 or is4 or is5 or is6 or is7 or is8 or is9;
	o3 = is0 or is2 or is3 or is5 or is6 or is8 or is9;
	o4 = is0 or is2 or is6 or is8;
	o5 = is0 or is4 or is5 or is6 or is8 or is9;
	o6 = is2 or is3 or is4 or is5 or is6 or is8 or is9;
	
	o = o0 . o1 . o2 . o3 . o4 . o5 . o6;
end where



(* Fonctions arithmétiques optimisées *)
sub10<n> (a:[n]) = (b:[n], r) where
	a0 = a[0];
	a1 = a[1];
	a2 = a[2];
	a3 = a[3];
	b1 = not(a1);
	b2 = a2 xor b1;
	r23 = not(a1) and b1;
	b3 = not(a3 xor r23);
	r' = not(a3) or r23;
	finA = a[4..];
	(decrFinA, r'') = decr_n<n-4>(finA);
	
	finB = mux_n<n-4>(decrFinA, finA, r');
	b = a0 . b1 . b2 . b3 . finB;
	r = r'' and r';
end where

div10'<n, m> (a:[n]) = (q:[m], r:[n]) where
	if m = 0 then
		q = [];
		r = a;
	else
		a' = a[m-1..] . empty<m-1>();
		(res, r') = sub10<n>(a');
		a'' = mux_n<n>(a, a[..m-2] . res[..n-m], r');
		
		(q', r) = div10'<n, m-1> (a'');
		q = q' . not(r');
	end if
end where

div10<n> (a:[n]) = (q:[n], r:[n]) where
	(q, r) = div10'<n,n>(a);
end where

(* Précision pour 2012 par exemple : a01 = 20 et a02 = 12           *)
(* Format j1 j2 / m1 m2 / a1 a2 a3 a4     h1 h2 : min1 min2 : s1 s2 *)
gpu (j:[8], m:[8], a01:[8], a02:[8], h:[8], min:[8], s:[8]) =
		(output:[7*14]) where
	
	
	(s2, s1) = div10<8>(s);
	(min2, min1) = div10<8>(min);
	(h2, h1) = div10<8>(h);
	(j2, j1) = div10<8>(j);
	(m2, m1) = div10<8>(m);
	(a2, a1) = div10<8>(a01);
	(a4, a3) = div10<8>(a02);
	
	output
	= seg(s1)
	. seg(s2)
	. seg(min1)
	. seg(min2)
	. seg(h1)
	. seg(h2)
	. seg(j1)
	. seg(j2)
	. seg(m1)
	. seg(m2)
	. seg(a1)
	. seg(a2)
	. seg(a3)
	. seg(a4);
end where




